import{_ as a,c as t,o as e,a4 as s}from"./chunks/framework.DCU59OQD.js";const m=JSON.parse('{"title":"跨域问题","description":"","frontmatter":{},"headers":[],"relativePath":"fqa/cross-domain.md","filePath":"fqa/cross-domain.md","lastUpdated":1712972077000}'),i={name:"fqa/cross-domain.md"},o=s('<h1 id="跨域问题" tabindex="-1">跨域问题 <a class="header-anchor" href="#跨域问题" aria-label="Permalink to &quot;跨域问题&quot;">​</a></h1><p>项目已经做了跨域处理，按照要求安装一般不会出现跨域问题<br> 如果出现跨域问题可以按以下步骤排除：</p><h2 id="环境是否达到安装的环境要求" tabindex="-1">环境是否达到安装的环境要求 <a class="header-anchor" href="#环境是否达到安装的环境要求" aria-label="Permalink to &quot;环境是否达到安装的环境要求&quot;">​</a></h2><p>特别是 fileinfo、redis 扩展，必须安装<br> Linux服务器必须开启PHP的 putenv、proc_open 函数，否则 安装依赖 composer install 的时候会报错</p><h2 id="重启-web、php、mysql-等服务" tabindex="-1">重启 WEB、PHP、MySQL 等服务 <a class="header-anchor" href="#重启-web、php、mysql-等服务" aria-label="Permalink to &quot;重启 WEB、PHP、MySQL 等服务&quot;">​</a></h2><p>可以把Nginx、Apache、PHP、MySQL等服务重启</p><h2 id="是否同为-http-或-https" tabindex="-1">是否同为 http 或 https <a class="header-anchor" href="#是否同为-http-或-https" aria-label="Permalink to &quot;是否同为 http 或 https&quot;">​</a></h2><p>前后端网站的协议需要同时为 http 或 https， 不能一个为 http，一个为 https</p><h2 id="token放在请求参数中" tabindex="-1">token放在请求参数中 <a class="header-anchor" href="#token放在请求参数中" aria-label="Permalink to &quot;token放在请求参数中&quot;">​</a></h2><p>token方式<br> src/settings.js</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tokenType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;param&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // token方式：header请求头部，param请求参数</span></span></code></pre></div><h2 id="前后端部署到同一域名" tabindex="-1">前后端部署到同一域名 <a class="header-anchor" href="#前后端部署到同一域名" aria-label="Permalink to &quot;前后端部署到同一域名&quot;">​</a></h2><p>如果正式部署的时候出现跨域，可以把前后端部署到同一域名</p>',13),h=[o];function n(r,p,l,d,c,k){return e(),t("div",null,h)}const u=a(i,[["render",n]]);export{m as __pageData,u as default};
