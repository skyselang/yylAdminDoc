(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{444:function(t,a,r){"use strict";r.r(a);var e=r(8),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),a("p",[t._v("系统缓存分为：业务缓存类，通用缓存类，ThinkPHP缓存类。"),a("br"),t._v("\n这样调用清除缓存接口才不会清除用户、会员token缓存。"),a("br"),t._v("\n最终都是调用 ThinkPHP 缓存。")]),t._v(" "),a("h3",{attrs:{id:"业务缓存类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务缓存类"}},[t._v("#")]),t._v(" 业务缓存类")]),t._v(" "),a("p",[t._v("业务：根据业务功能添加缓存类。"),a("br"),t._v("\n例子：内容管理 app\\common\\cache\\content\\ContentCache，内容缓存操作调用此类。")]),t._v(" "),a("h3",{attrs:{id:"通用缓存类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用缓存类"}},[t._v("#")]),t._v(" 通用缓存类")]),t._v(" "),a("p",[t._v("通用：app\\common\\cache\\Cache; 用法和 ThinkPHP 缓存使用一致。"),a("br"),t._v("\n例子：app\\common\\service\\utils\\Utils。")]),t._v(" "),a("h3",{attrs:{id:"thinkphp缓存类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thinkphp缓存类"}},[t._v("#")]),t._v(" ThinkPHP缓存类")]),t._v(" "),a("p",[t._v("直接调用 ThinkPHP 缓存类 think\\facade\\Cache，调用清除缓存接口将不会被清除。"),a("br"),t._v("\n调用 think\\facade\\Cache::clear() 方法将清空所有缓存;")]),t._v(" "),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("p",[t._v("如果缓存类型和队列驱动类型都使用了 redis，请不要使用相同 db。否则清除缓存可能使队列丢失。")])])}),[],!1,null,null,null);a.default=n.exports}}]);